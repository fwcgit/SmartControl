C51 COMPILER V9.56.0.0   ADC                                                               08/15/2017 23:08:50 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE ADC
OBJECT MODULE PLACED IN .\Objects\adc.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE adc.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\adc.l
                    -st) TABS(2) OBJECT(.\Objects\adc.obj)

line level    source

   1          #include "config.h"
   2          #include "ADC.h"
   3          #include "intrins.h"
   4          #include "Uart.h"
   5          #include "utils.h"
   6          #include <reg52.h>
   7          
   8          #define ADC_POWER       0x80
   9          #define ADC_FLAG        0x10
  10          #define ADC_SPEED       0x40
  11          #define ADC_START       0x08
  12          #define ADC_CH_NTC      0x02
  13          #define ADC_CH_HALL     0x03
  14          #define ADC_CH_BATTERY  0x04
  15          #define ADC_CH_REF      0x05
  16          
  17          
  18          void init_adc()
  19          {
  20   1        ADC_RES = 0;
  21   1        ADC_RESL = 0;
  22   1        ADC_CONTR = ADC_POWER | ADC_SPEED;
  23   1        Delay1000ms();                
  24   1      }
  25          
  26          uint getAdcResult(uchar ch)
  27          {
  28   1        
  29   1        uint result ;
  30   1        
  31   1        ADC_RES = 0;
  32   1        ADC_RESL = 0;
  33   1          
  34   1        ADC_CONTR = ADC_POWER | ADC_SPEED | ch | ADC_START;
  35   1        
  36   1         _nop_(); 
  37   1         _nop_(); 
  38   1         _nop_(); 
  39   1         _nop_(); 
  40   1      
  41   1        while (!(ADC_CONTR & ADC_FLAG));
  42   1        
  43   1        ADC_CONTR &= ~ADC_FLAG; 
  44   1          
  45   1        result = ADC_RES;
  46   1        result = result << 8 ;
  47   1        result = result | ADC_RESL;
  48   1        
  49   1        return result;
  50   1      
  51   1      }
  52          
  53          
  54          unsigned int get_adc_hall()
C51 COMPILER V9.56.0.0   ADC                                                               08/15/2017 23:08:50 PAGE 2   

  55          {
  56   1        uint sum;
  57   1        uint i = 0;
  58   1        
  59   1        getAdcResult(ADC_CH_HALL);
  60   1        
  61   1        for(i = 0 ; i < 16 ; i++)
  62   1        {
  63   2          sum += getAdcResult(ADC_CH_HALL);
  64   2        }
  65   1        
  66   1        return sum >>= 4;
  67   1      }
  68          unsigned int get_adc_battery()
  69          {
  70   1        uint sum;
  71   1        uint i = 0;
  72   1        
  73   1        getAdcResult(ADC_CH_BATTERY);
  74   1        
  75   1        for(i = 0 ; i < 16 ; i++)
  76   1        {
  77   2          sum += getAdcResult(ADC_CH_BATTERY);
  78   2        }
  79   1        
  80   1        return sum >>= 4;
  81   1      }
  82          unsigned int get_adc_ntc()
  83          {
  84   1        uint sum;
  85   1        uint i = 0;
  86   1        
  87   1        getAdcResult(ADC_CH_NTC);
  88   1        getAdcResult(ADC_CH_NTC);
  89   1        
  90   1        for(i = 0 ; i < 64 ; i++)
  91   1        {
  92   2          sum += getAdcResult(ADC_CH_NTC);
  93   2        }
  94   1        
  95   1        return sum  = sum / 64;
  96   1      }
  97          unsigned int get_adc_ref()
  98          {
  99   1        uint sum;
 100   1        uint i = 0;
 101   1        
 102   1        getAdcResult(ADC_CH_REF);
 103   1      
 104   1        for(i = 0 ; i < 16 ; i++)
 105   1        {
 106   2          sum += getAdcResult(ADC_CH_REF);
 107   2        }
 108   1        
 109   1        return sum  = sum >> 4;
 110   1      }
 111          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    268    ----
   CONSTANT SIZE    =   ----    ----
C51 COMPILER V9.56.0.0   ADC                                                               08/15/2017 23:08:50 PAGE 3   

   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       8
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
